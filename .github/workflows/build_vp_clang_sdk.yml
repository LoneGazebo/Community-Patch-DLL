name: Build

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ./wget
            sdk7.iso
            ./SDK7
            sdk71.iso
            ./SDK7.1
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Install wget
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing wget..."
          mkdir wget
          Invoke-WebRequest -Uri https://eternallybored.org/misc/wget/1.21.3/64/wget.exe -OutFile "wget\wget.exe"
          ls
          cd $env:GITHUB_WORKSPACE\wget
          ls
          Add-Content $env:GITHUB_PATH "$env:GITHUB_WORKSPACE\wget"
          echo "wget installation complete."

      - name: Download Windows SDK 7.0 SP1 and 7.1
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Downloading SDKs..."
          wget -O ./sdk7.iso https://web.archive.org/web/20161230154527/http://download.microsoft.com/download/2/E/9/2E911956-F90F-4BFB-8231-E292A7B6F287/GRMSDK_EN_DVD.iso
          wget -O ./sdk71.iso http://download.microsoft.com/download/F/1/0/F10113F5-B750-4969-A255-274341AC6BCE/GRMSDK_EN_DVD.iso
          7z x ./sdk7.iso -y -o"./SDK7"
          7z x ./sdk71.iso -y -o"./SDK7.1"
          echo "SDKs downloaded and extracted."

      - name: Install SDKs
        run: |
          echo "Installing SDKs..."
          Start-Process -FilePath ".\SDK7\Setup\WinSDK\WinSDK_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\WinSDKBuild\WinSDKBuild_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\WinSDKInterop\WinSDKInterop_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\WinSDKTools\WinSDKTools_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\WinSDKWin32Tools\WinSDKWin32Tools_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\vc_stdx86\vc_stdx86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\vc_stdamd64\vc_stdamd64.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\winsdk_intellidocs\winsdk_intellidocs.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7\Setup\WinSDKNetFxTools\WinSDK_nfxtoolsm_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\WinSDK\WinSDK_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\WinSDKBuild\WinSDKBuild_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\WinSDKInterop\WinSDKInterop_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\WinSDKTools\WinSDKTools_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\WinSDKWin32Tools\WinSDKWin32Tools_x86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\vc_stdx86\vc_stdx86.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\vc_stdamd64\vc_stdamd64.msi" -ArgumentList "/qn" -Wait
          Start-Process -FilePath ".\SDK7.1\Setup\WinSDKNetFxTools\WinSDK_nfxtoolsm_x86.msi" -ArgumentList "/qn" -Wait
          echo "SDKs installation complete."

      - name: Clang version check
        run: |
          clang --version

      - name: Run debug build
        run: |
          python build_vp_clang_sdk.py --config debug

      - name: Display debug build log
        run: |
          cat clang-output/Debug/build.log

      - name: Run release build
        run: |
          python build_vp_clang_sdk.py --config release

      - name: Display release build log
        run: |
          cat clang-output/Release/build.log

      - name: Create debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: VP_Clang_Debug
          path: 'clang-output\Debug'

      - name: Create release artifact
        uses: actions/upload-artifact@v4
        with:
          name: VP_Clang_Release
          path: 'clang-output\Release'
