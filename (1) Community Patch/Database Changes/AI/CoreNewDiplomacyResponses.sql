--------------------------------------------------------------------------------------------------------
-- How this works:
-- For each scenario that prompts a dialogue from an AI player to a human player (DiploMessageTypes),
-- the game picks an associated ResponseType (CvDiplomacyAI::GetDiploStringForMessage()),
-- and then a random Response text key from the Diplomacy_Responses table based on Biases (CvGame::GetDiploResponse()).
--
-- If NO_RANDOM_TEXT_CIVS option is on and leader-specific responses exist, only those will be picked.
-- Otherwise, GENERIC and leader-specific responses will both be picked.
--
-- This file inserts a Response into the table for each LeaderType/ResponseType pair,
-- regardless of whether the actual text key(s) exists.
--
-- This doesn't need to be changed when more leader-specific responses are added,
-- but does if new response types are added (alongside GENERIC responses).
--------------------------------------------------------------------------------------------------------

CREATE TEMP TABLE Responses (
	ResponseType text,
	ResponseKeySuffix text
);

INSERT INTO Responses
VALUES
	('RESPONSE_LETS_HEAR_IT', 'LETSHEARIT'),
	('RESPONSE_WINNER_PEACE_OFFER', 'WINWAR'),
	('RESPONSE_DEMAND', 'DEMANDTRIBUTE_NEUTRAL'),
	('RESPONSE_TRADE_ACCEPT_GENEROUS', 'TRADE_YES_HAPPY'),
	('RESPONSE_TRADE_ACCEPT_ACCEPTABLE', 'TRADE_YES_NEUTRAL'),
	('RESPONSE_TRADE_ACCEPT_AI_DEMAND', 'TRADE_YES_ANGRY'),
	('RESPONSE_TRADE_REJECT_UNACCEPTABLE', 'TRADE_NEEDMORE_NEUTRAL'),
	('RESPONSE_TRADE_DEAL_UNCHANGED', 'AGREE_SHORT'),
	('RESPONSE_TRADE_REJECT_INSULTING', 'TRADE_NO_ANGRY'),
	('RESPONSE_TRADE_AI_MAKES_OFFER', 'TRADEREQUEST_NEUTRAL'),
	('RESPONSE_TRADE_NO_DEAL_POSSIBLE', 'DISAGREE_SHORT'),
	('RESPONSE_ATTACKED_HOSTILE', 'ATTACKED'),
	('RESPONSE_DOW_GENERIC', 'DECLAREWAR'),
	('RESPONSE_ATTACKED_MILITARY_PROMISE_BROKEN', 'WARBLUFF'),
	('RESPONSE_PEACE_MADE_BY_HUMAN_GRACIOUS', 'LOSEWAR'),
	('RESPONSE_SO_BE_IT', 'TRIBUTE_YES_ANGRY'),
	('RESPONSE_REPEAT_NO', 'TRIBUTE_NO_NEUTRAL'),
	('RESPONSE_HUMAN_DEMAND_YES', 'TRIBUTE_YES_NEUTRAL'),
	('RESPONSE_HUMAN_DEMAND_REFUSE_HOSTILE', 'TRIBUTE_NO_ANGRY'),
	('RESPONSE_HUMAN_DEMAND_REFUSE_WEAK', 'TRIBUTE_NO_NEUTRAL'),
	('RESPONSE_HUMAN_DEMAND_REFUSE_TOO_MUCH', 'TRADE_NO_NEUTRAL'),
	('RESPONSE_EMBASSY_OFFER', 'TRADEREQUEST_HAPPY'),
	('RESPONSE_TRADE_CANT_MATCH_OFFER', 'TRADE_CANT_MATCH'),
	('RESPONSE_GREETING_POLITE_HELLO', 'GREETING_POLITE_HELLO'),
	('RESPONSE_GREETING_NEUTRAL_HELLO', 'GREETING_NEUTRAL_HELLO'),
	('RESPONSE_GREETING_HOSTILE_HELLO', 'GREETING_HOSTILE_HELLO');

CREATE TEMP TABLE LeaderNames (
	LeaderType text,
	LeaderName text
);

INSERT INTO LeaderNames
VALUES
	('LEADER_ALEXANDER', 'TXT_KEY_LEADER_ALEXANDER'),
	('LEADER_ASKIA', 'TXT_KEY_LEADER_ASKIA'),
	('LEADER_AUGUSTUS', 'TXT_KEY_LEADER_AUGUSTUS'),
	('LEADER_BISMARCK', 'TXT_KEY_LEADER_BISMARCK'),
	('LEADER_CATHERINE', 'TXT_KEY_LEADER_CATHERINE'),
	('LEADER_DARIUS', 'TXT_KEY_LEADER_DARIUS'),
	('LEADER_ELIZABETH', 'TXT_KEY_LEADER_ELIZABETH'),
	('LEADER_GANDHI', 'TXT_KEY_LEADER_GANDHI'),
	('LEADER_HARUN_AL_RASHID', 'TXT_KEY_LEADER_HARUN'),
	('LEADER_HIAWATHA', 'TXT_KEY_LEADER_HIAWATHA'),
	('LEADER_MONTEZUMA', 'TXT_KEY_LEADER_MONTEZUMA'),
	('LEADER_NAPOLEON', 'TXT_KEY_LEADER_NAPOLEON'),
	('LEADER_ODA_NOBUNAGA', 'TXT_KEY_LEADER_ODA'),
	('LEADER_RAMESSES', 'TXT_KEY_LEADER_RAMESSES'),
	('LEADER_RAMKHAMHAENG', 'TXT_KEY_LEADER_RAMKHAMHAENG'),
	('LEADER_SULEIMAN', 'TXT_KEY_LEADER_SULEIMAN'),
	('LEADER_WASHINGTON', 'TXT_KEY_LEADER_WASHINGTON'),
	('LEADER_WU_ZETIAN', 'TXT_KEY_LEADER_WUZETIAN'),
	('LEADER_GENGHIS_KHAN', 'TXT_KEY_LEADER_GENGHIS'),
	('LEADER_ISABELLA', 'TXT_KEY_LEADER_ISABELLA'),
	('LEADER_PACHACUTI', 'TXT_KEY_LEADER_PACHACUTI'),
	('LEADER_KAMEHAMEHA', 'TXT_KEY_LEADER_KAMEHAMEHA'),
	('LEADER_HARALD', 'TXT_KEY_LEADER_HARALD'),
	('LEADER_SEJONG', 'TXT_KEY_LEADER_SEJONG'),
	('LEADER_NEBUCHADNEZZAR', 'TXT_KEY_LEADER_NEBUCHADNEZZAR'),
	('LEADER_ATTILA', 'TXT_KEY_LEADER_ATTILA'),
	('LEADER_BOUDICCA', 'TXT_KEY_LEADER_BOUDICCA'),
	('LEADER_DIDO', 'TXT_KEY_LEADER_DIDO'),
	('LEADER_GUSTAVUS_ADOLPHUS', 'TXT_KEY_LEADER_GUSTAVUS_ADOLPHUS'),
	('LEADER_MARIA', 'TXT_KEY_LEADER_MARIA'),
	('LEADER_PACAL', 'TXT_KEY_LEADER_PACAL'),
	('LEADER_THEODORA', 'TXT_KEY_LEADER_THEODORA'),
	('LEADER_SELASSIE', 'TXT_KEY_LEADER_SELASSIE'),
	('LEADER_WILLIAM', 'TXT_KEY_LEADER_WILLIAM'),
	('LEADER_AHMAD_ALMANSUR', 'TXT_KEY_LEADER_AHMAD_ALMANSUR'),
	('LEADER_ASHURBANIPAL', 'TXT_KEY_LEADER_ASHURBANIPAL'),
	('LEADER_CASIMIR', 'TXT_KEY_LEADER_CASIMIR'),
	('LEADER_ENRICO_DANDOLO', 'TXT_KEY_LEADER_ENRICO_DANDOLO'),
	('LEADER_GAJAH_MADA', 'TXT_KEY_LEADER_GAJAH_MADA'),
	('LEADER_MARIA_I', 'TXT_KEY_LEADER_MARIA_I'),
	('LEADER_PEDRO', 'TXT_KEY_LEADER_PEDRO'),
	('LEADER_POCATELLO', 'TXT_KEY_LEADER_POCATELLO'),
	('LEADER_SHAKA', 'TXT_KEY_LEADER_SHAKA');

INSERT INTO Diplomacy_Responses
	(LeaderType, ResponseType, Response)
SELECT
	b.LeaderType, a.ResponseType, b.LeaderName || '_' || a.ResponseKeySuffix || '%'
FROM Responses a, LeaderNames b
WHERE NOT EXISTS (SELECT 1 FROM Diplomacy_Responses WHERE LeaderType = b.LeaderType AND ResponseType = a.ResponseType);

DROP TABLE Responses;
DROP TABLE LeaderNames;
